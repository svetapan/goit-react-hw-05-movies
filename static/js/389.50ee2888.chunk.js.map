{"version":3,"file":"static/js/389.50ee2888.chunk.js","mappings":"6OAAMA,EAAe,mCAAG,WAAOC,GAAP,kGAEGC,MAAM,sCAAD,OACYD,EADZ,sDAFR,WAEdE,EAFc,QAMNC,GANM,sBAOZ,IAAIC,MAAJ,kCACuBF,EAASG,OADhC,YAC0CH,EAASI,aARvC,uBAYDJ,EAASK,OAZR,cAYdC,EAZc,yBAabA,EAAKC,MAbQ,wCAed,IAAIL,MAAJ,kCAAqC,KAAMM,UAf7B,0DAAH,sDAkBrB,I,SCuBA,EArCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,oGACGjB,EAAgBc,GADnB,OACdI,EADc,OAEpBL,EAAQK,GAFY,2CAAH,qDAInBD,GACD,GAAE,CAACH,IAEJK,QAAQC,IAAIV,IAGV,8BACGA,EAAKW,OAAS,GACb,wBACGX,EAAKY,KAAI,SAAAC,GAAU,OAClB,2BACE,gBACEC,IAAG,6CAAwCD,EAAWE,cACtDC,IAAKH,EAAWI,KAChBC,MAAO,OAET,uBAAIL,EAAWI,QACf,uCAAeJ,EAAWM,eAPnBN,EAAWtB,GADF,OAatB,+DAIP,C","sources":["api/getCastResponse.js","components/Cast/Cast.jsx"],"sourcesContent":["const getCastResponse = async (id) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=19a77e83d08632a429865980c71677d1`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch images: ${response.status} ${response.statusText}`\n      );\n    }\n\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    throw new Error(`Failed to fetch images: ${error.message}`);\n  }\n};\nexport default getCastResponse;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getCastResponse from 'api/getCastResponse';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCastData = async () => {\n      const castData = await getCastResponse(movieId);\n      setCast(castData);\n    };\n    fetchCastData();\n  }, [movieId]);\n\n  console.log(cast);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(castPerson => (\n            <li key={castPerson.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${castPerson.profile_path}`}\n                alt={castPerson.name}\n                width={100}\n              />\n              <p>{castPerson.name}</p>\n              <p>Character: {castPerson.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["getCastResponse","id","fetch","response","ok","Error","status","statusText","json","data","cast","message","useState","setCast","movieId","useParams","useEffect","fetchCastData","castData","console","log","length","map","castPerson","src","profile_path","alt","name","width","character"],"sourceRoot":""}
{"version":3,"file":"static/js/792.129ad304.chunk.js","mappings":"qPAAMA,EAAc,mCAAG,WAAOC,GAAP,kGAEMC,MAAM,oDAAD,OAC0BD,EAD1B,8CAFX,WAEXE,EAFW,QAMHC,GANG,sBAOT,IAAIC,MAAJ,iCACsBF,EAASG,OAD/B,YACyCH,EAASI,aARzC,uBAYEJ,EAASK,OAZX,cAYXC,EAZW,yBAaVA,GAbU,wCAeX,IAAIJ,MAAJ,iCAAoC,KAAMK,UAf/B,0DAAH,sDAmBpB,IClBA,EAA8B,iC,SC8E9B,EA1EoB,WAClB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IACMC,EADc,IAAIC,gBAAgBN,EAASO,QACvBC,IAAI,SAC1BH,IACFN,EAAeM,GACfI,EAAaJ,GAEhB,GAAE,CAACL,IAEJ,IAAMS,EAAY,mCAAG,WAAMJ,GAAN,gGAEErB,EAAeqB,GAFjB,OAEXZ,EAFW,OAGjBI,EAAWJ,EAAKG,SAHC,gDAKjBc,QAAQC,MAAR,MALiB,yDAAH,sDA8BlB,OACE,iCACE,kBAAMC,UAAWC,EAAiBC,SAvBjB,SAAAC,GAGnB,GAFAA,EAAEC,iBAEyB,KAAvBlB,EAAYmB,OAAhB,CAKAlB,EAAe,IACfU,EAAaX,GAEb,IAAMoB,EAAc,IAAIZ,gBACxBY,EAAYC,IAAI,QAASrB,GACzBI,EAAS,IAAD,OAAKgB,EAAYE,YAPxB,MAFCC,MAAM,oCAUT,EASG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAO5B,EACP6B,SAda,SAAAC,GACnB,IAAMF,EAAQE,EAAIC,cAAcH,MAAMI,cACtC/B,EAAe2B,EAChB,KAaK,mBAAQJ,KAAK,SAAb,UACE,2CAGJ,wBACG1B,EAAQmC,OAAS,GAChBnC,EAAQoC,KAAI,SAAAC,GAAM,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAOpC,EAAzC,SACGiC,EAAOI,SAFHJ,EAAOE,GADA,QAU3B,EC/DD,EAZmB,SAAC,GAAiD,IAA/CG,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,aAAczC,EAAkB,EAAlBA,YAChD,OACE,+BACE,SAAC,EAAD,CACEwC,aAAcA,EACdC,aAAcA,EACdzC,YAAaA,KAIpB,C","sources":["api/getSearchMovie.js","webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","Pages/MoviesPage.jsx"],"sourcesContent":["const getSearchMovie = async (searchData) => {\n   try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?&query=${searchData}&api_key=19a77e83d08632a429865980c71677d1`\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch movie: ${response.status} ${response.statusText}`\n        );\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error(`Failed to fetch movie: ${error.message}`);\n    }\n};\n\nexport default getSearchMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"MovieSearch_formWrapper__YxA77\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport getSearchMovie from 'api/getSearchMovie';\nimport css from './MovieSearch.module.css'\n\nconst MovieSearch = () => {\n  const [results, setResults] = useState([]);\n  const [searchMovie, setSearchMovie] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const query = queryParams.get('query');\n    if (query) {\n      setSearchMovie(query);\n      searchMovies(query);\n    }\n  }, [location]);\n\n  const searchMovies = async query => {\n    try {\n      const data = await getSearchMovie(query);\n      setResults(data.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      alert('Please enter the name of the film');\n      return;\n    }\n\n    setSearchMovie('');\n    searchMovies(searchMovie);\n\n    const queryParams = new URLSearchParams();\n    queryParams.set('query', searchMovie);\n    navigate(`?${queryParams.toString()}`);\n  };\n\n  const handleChange = evt => {\n    const value = evt.currentTarget.value.toLowerCase();\n    setSearchMovie(value);\n  };\n\n  return (\n    <>\n      <form className={css.formWrapper} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={searchMovie}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      <ul>\n        {results.length > 0 &&\n          results.map(result => (\n            <li key={result.id}>\n              <Link to={`/movies/${result.id}`} state={location}>\n                {result.title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieSearch;\n","import MovieSearch from 'components/MovieSearch/MovieSearch';\n\nconst MoviesPage = ({ handleSubmit, handleChange, searchMovie }) => {\n  return (\n    <>\n      <MovieSearch\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        searchMovie={searchMovie}\n      />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["getSearchMovie","searchData","fetch","response","ok","Error","status","statusText","json","data","message","useState","results","setResults","searchMovie","setSearchMovie","location","useLocation","navigate","useNavigate","useEffect","query","URLSearchParams","search","get","searchMovies","console","error","className","css","onSubmit","e","preventDefault","trim","queryParams","set","toString","alert","type","autoComplete","autoFocus","placeholder","value","onChange","evt","currentTarget","toLowerCase","length","map","result","to","id","state","title","handleSubmit","handleChange"],"sourceRoot":""}
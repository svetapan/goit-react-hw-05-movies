{"version":3,"file":"static/js/232.f523cce1.chunk.js","mappings":"6OAAMA,EAAkB,mCAAG,WAAOC,GAAP,kGAEAC,MAAM,sCAAD,OACYD,EADZ,qEAFL,WAEjBE,EAFiB,QAMTC,GANS,sBAOf,IAAIC,MAAJ,kCACuBF,EAASG,OADhC,YAC0CH,EAASI,aARpC,uBAYJJ,EAASK,OAZL,cAYjBC,EAZiB,yBAchBA,EAAKC,SAdW,wCAgBjB,IAAIL,MAAJ,kCAAqC,KAAMM,UAhB1B,0DAAH,sDAmBxB,I,SCgBA,EA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACElB,EAAmBe,GADrB,OAClBI,EADkB,OAExBL,EAAWK,GAFa,2CAAH,qDAIvBD,GACD,GAAE,CAACH,KAGF,8BACGF,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,wCAAgBA,EAAOC,OAAvB,QACA,uBAAID,EAAOE,YAFJF,EAAOrB,GADC,OAQrB,oEAIP,C","sources":["api/getReviewsResponse.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const getReviewsResponse = async (id) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&api_key=19a77e83d08632a429865980c71677d1`\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Failed to fetch images: ${response.status} ${response.statusText}`\n      );\n    }\n\n    const data = await response.json();\n\n    return data.results;\n  } catch (error) {\n    throw new Error(`Failed to fetch images: ${error.message}`);\n  }\n};\nexport default getReviewsResponse;\n","// Cast.jsx\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getReviewsResponse from 'api/getReviewsResponse';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviewstData = async () => {\n      const reviewsData = await getReviewsResponse(movieId);\n      setReviews(reviewsData);\n    };\n    fetchReviewstData();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <span> Aothor: {review.author}.</span>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviws for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["getReviewsResponse","id","fetch","response","ok","Error","status","statusText","json","data","results","message","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewstData","reviewsData","length","map","review","author","content"],"sourceRoot":""}